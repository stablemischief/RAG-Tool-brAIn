# RAG Tool Standalone - User Installation
# Single-command deployment: docker-compose up

version: '3.8'

services:
  # Backend FastAPI service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: rag-tool-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # OpenAI Configuration (CRITICAL - preserve exact model)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - EMBEDDING_MODEL_NAME=text-embedding-3-small
      - EMBEDDING_DIMENSIONS=1536
      - EMBEDDING_BASE_URL=${EMBEDDING_BASE_URL:-https://api.openai.com/v1}
      
      # Supabase Configuration (single-user simplified)
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      
      # Google Drive Service Account (NO OAuth2)
      - GOOGLE_SERVICE_ACCOUNT_PATH=/app/config/service-account.json
      - GOOGLE_DRIVE_FOLDER_ID=${GOOGLE_DRIVE_FOLDER_ID}
      - POLLING_INTERVAL=${POLLING_INTERVAL:-300}
      
      # Application Configuration
      - HOST=0.0.0.0
      - PORT=8000
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - CLEANUP_ENABLED=${CLEANUP_ENABLED:-true}
      - MAX_FILE_SIZE_MB=${MAX_FILE_SIZE_MB:-50}
      
      # Text Processing (CRITICAL - preserve exact values)
      - DEFAULT_CHUNK_SIZE=400
      - DEFAULT_CHUNK_OVERLAP=80
    volumes:
      # Service account JSON file (must be provided by user)
      - ./config/service-account.json:/app/config/service-account.json:ro
      # Logs persistence
      - ./logs:/app/logs
      # Optional: Custom configuration
      - ./config:/app/config
    depends_on:
      - redis
    networks:
      - rag-tool-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Next.js service  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rag-tool-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      - backend
    networks:
      - rag-tool-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: rag-tool-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - rag-tool-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

# Named volumes for data persistence
volumes:
  redis-data:
    driver: local
  logs:
    driver: local

# Custom network for service communication
networks:
  rag-tool-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16